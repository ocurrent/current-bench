version: "3.8"
services:
  db:
    build: ../pipeline/postgres
    environment:
      - POSTGRES_DB=docker
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=${OCAML_BENCH_DB_PASSWORD?required}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U docker"]
      interval: 5s
      timeout: 5s
      retries: 3
    restart: always
    expose: ["5432"]
  graphql-engine:
    image: hasura/graphql-engine:v1.3.3.cli-migrations-v2
    ports:
      - "${OCAML_BENCH_GRAPHQL_PORT?required}:${OCAML_BENCH_GRAPHQL_PORT?required}"
    depends_on:
      db:
        condition: service_healthy
      db-migrate:
        condition: service_started
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://docker:docker@db:5432/docker
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${OCAML_BENCH_GRAPHQL_KEY?required}
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "public"
    volumes:
      - ../hasura-server/metadata:/hasura-metadata
  frontend:
    build:
      context: ../frontend
      args:
        VITE_OCAML_BENCH_PIPELINE_URL: ${OCAML_BENCH_PIPELINE_URL?required}
        VITE_OCAML_BENCH_GRAPHQL_URL: ${OCAML_BENCH_GRAPHQL_URL?required}
    ports:
      [
        "${OCAML_BENCH_FRONTEND_PORT?required}:${OCAML_BENCH_FRONTEND_PORT?required}",
      ]

    restart: always
    depends_on:
      - "graphql-engine"
  pipeline:
    build:
      context: ../pipeline
      args:
        TARGET_ARCH: ${OCAML_BENCH_TARGET_ARCH?required}
    volumes:
	  - bench-data:/app/bench-data
      # Mount the source code of the test project to allow local testing.
      - ../local-test-repo:/app/local-test-repo
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      [
        "${OCAML_BENCH_PIPELINE_PORT?required}:${OCAML_BENCH_PIPELINE_PORT?required}",
      ]
    # Mount the source code of the test project to allow local testing.
    - current-bench-data:/app/current-bench-data:ro
    - ../local-test-repo:/app/local-test-repo
    - /var/run/docker.sock:/var/run/docker.sock
    ports: ["${OCAML_BENCH_PIPELINE_PORT?required}:${OCAML_BENCH_PIPELINE_PORT?required}"]
    command:
      - "current-bench-pipeline"
      - "local"
      - "/app/local-test-repo"
      - "--verbose"
      - "--port=${OCAML_BENCH_PIPELINE_PORT?required}"
      - "--docker-cpu=${OCAML_BENCH_DOCKER_CPU?required}"
      - "--conn-info=host=db user=docker port=5432 dbname=docker password=${OCAML_BENCH_DB_PASSWORD?required}"
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      OCAML_BENCH_FRONTEND_URL: ${OCAML_BENCH_FRONTEND_URL?required}
  # Apply database migrations. To be used only in development!
  db-migrate:
    image: current-bench_pipeline:latest
    command:
      - "omigrate"
      - "setup"
      - "--verbose"
      - "--source=/app/db/migrations"
      - "--database=postgresql://docker:${OCAML_BENCH_DB_PASSWORD?required}@db:5432/docker"
    depends_on:
      db:
        condition: service_healthy

volumes:
  current-bench-data:
    external: true
