version: '3.8'
services:
  db:
    build: ../pipeline/postgres
    environment:
    - POSTGRES_DB=docker
    - POSTGRES_USER=docker
    - POSTGRES_PASSWORD=${OCAML_BENCH_DB_PASSWORD?required}
    restart: always
    ports: ["5432:5432"]
  graphql-engine:
    image: hasura/graphql-engine:v1.3.3
    ports:
    - "8080:8080"
    depends_on:
    - "db"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://docker:docker@db:5432/docker
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${OCAML_BENCH_GRAPHQL_KEY?required}
  frontend:
    build: ../frontend
    ports:
    - "8082:80"
    restart: always
    depends_on:
    - "graphql-engine"
  pipeline:
    build:
      context: ../pipeline
      args:
        TARGET_ARCH: ${OCAML_BENCH_TARGET_ARCH?required}
    volumes:
    # Mount the source code of the test project to allow local testing.
    - ../local-test-repo:/app/local-test-repo
    - /var/run/docker.sock:/var/run/docker.sock
    ports: ["8081:8081"]
    command:
    - "current-bench-pipeline"
    - "local"
    - "/app/local-test-repo"
    - "--verbose"
    - "--port=8081"
    - "--docker-cpu=${OCAML_BENCH_DOCKER_CPU?required}"
    - "--conn-info=host=db user=docker port=5432 dbname=docker password=${OCAML_BENCH_DB_PASSWORD?required}"
    restart: always
    depends_on:
    - "db"
  # Apply database migrations. To be used only in development!
  db-migrate:
    image: current-bench_pipeline:latest
    command:
    - "wait-for"
    - "db:5432"
    - "-t"
    - "15"
    - "--"
    - "omigrate"
    - "setup"
    - "--verbose"
    - "--source=/app/db/migrations"
    - "--database=postgresql://docker:${OCAML_BENCH_DB_PASSWORD?required}@db:5432/docker"
    depends_on:
    - "db"
