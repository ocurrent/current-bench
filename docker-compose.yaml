version: '3.6'
services:
  pipeline:
    build: ./backend
    volumes:
    # TODO MOUNT var etc folder for ocurrent
    # - some-volume:/app/var
    - /var/run/docker.sock:/var/run/docker.sock
    - ./github-token.txt:/app/github-token.txt
    ports: ["8081:8081"]
    # FIXME: stop using the testing repo.
    command:
    - "wait-for"
    - "db:5432"
    - "--timeout=60"
    - "--"
    - "current-bench-pipeline"
    - "github"
    - "rizo/current-bench-test"
    - "--github-token-file=/app/github-token.txt"
    - "--port=8081"
    - "--verbosity=debug"
    - "--conn-info=host=db user=docker port=5432 dbname=docker password=docker"
    - "--docker-cpu=1"
    restart: always
    depends_on:
    - "db"
  db:
    build: ./backend/postgres
    environment:
    - POSTGRES_DB=docker
    - POSTGRES_USER=docker
    - POSTGRES_PASSWORD=docker
    restart: always
    volumes:
    - db_data:/var/lib/postgresql/data
    ports: ["5432:5432"]
  graphql-engine:
    image: hasura/graphql-engine:v1.2.2
    ports:
    - "8080:8080"
    depends_on:
    - "db"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://docker:docker@db:5432/docker
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${GRAPHQL_KEY}
  frontend:
    build: ./frontend
    ports:
    - "80:80"
    restart: always
    depends_on:
    - "graphql-engine"
       
volumes:
  db_data:
